buildscript {
    repositories {
    	mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'io.codearte.nexus-staging'

group 'com.remondis'
version PROJECT_VERSION
description 'A declarative mapping library for converting objects field by field. '

repositories {
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile "cglib:cglib:3.2.5"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.7.17"
    testCompile "org.assertj:assertj-core:3.5.1"

    testCompile "org.springframework:spring-test:4.3.10.RELEASE"
    testCompile "org.springframework:spring-context:4.3.10.RELEASE"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}


if (project.hasProperty('release')) {
    // Signature of artifacts
    signing {
        sign configurations.archives
    }
    
    // When Travis CI builds this project, the credentials come from environment variables
    if (!project.hasProperty('ossrhUser')) {
    	ossrhUser =  System.env['ossrhUser']
    	ossrhPassword = System.env['ossrhPassword']
    } 
    
    nexusStaging {  
    username = ossrhUser
    password = ossrhPassword
	}

    // OSSRH publication
    uploadArchives {
        repositories {
            mavenDeployer {
            	repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUser, password: ossrhPassword)
    		    }
             	pom.project {
            		name project.name
                    description project.description
                    packaging 'jar'
                    url = 'https://github.com/remondis-it/remap'

                    scm {
                        connection 'scm:git:https://github.com/remondis-it/remap.git'
                        developerConnection 'scm:git:git@github.com:remondis-it/remap.git'
                        url 'https://github.com/remondis-it/remap.git'
                    }

			        licenses {
			            license {
			                name = 'The Apache Software License, Version 2.0'
			                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
			                distribution = 'repo'
			            }
			        }

                    developers { 
			        	developer { 
			        		name = 'Christopher Sch√ºtte'
			        		email = 'christopher.schuette@remondis.de'
			        		organization = 'REMONDIS IT Services GmbH & Co. KG'
			        	}
		        	}
				}
            }
        }
    }
}

